;; lang/c/tables.scm

;; Copyright (C) 2015 Matthew R. Wette
;; 
;; This software is covered by the GNU GENERAL PUBLIC LICENCE, Version 3,
;; or any later version published by the Free Software Foundation.  See the
;; file COPYING included with the this distribution.

(define len-v
  #(1 1 5 0 1 2 1 2 1 2 1 2 1 3 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 
    1 1 1 2 2 1 3 2 1 2 5 4 4 3 5 4 1 2 1 1 1 1 1 4 4 3 1 3 1 3 2 2 1 1 3 1 4 
    3 1 3 2 4 2 1 2 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 4 6 5 2 1 1 3 1 3 
    1 1 1 5 4 2 1 1 2 2 4 1 3 1 1 1 3 2 1 1 1 5 4 2 1 1 1 2 1 1 2 1 3 3 2 4 3 
    4 3 4 3 3 2 1 1 1 3 1 1 1 1 1 1 1 4 1 1 3 3 4 3 1 3 2 2 6 7 1 4 1 1 1 1 1 
    1 1 1 1 1 4 2 2 2 2 2 2 2 2 2 1 3 1 1 1 1 3 1 1 1 3 1 1 1 3 1 1 1 1 1 3 1 
    1 1 3 1 3 1 3 1 3 1 3 1 5 1 3 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 
    1 1 1 1 2 3 1 1 1 3 2 1 2 1 1 1 1 5 7 1 1 1 5 7 3 6 5 5 4 2 1 1 5 2 1 2 2 
    3 2 3 1 1 1 2 1 1 1 1 2 3 2 1 1 2 0 1 1 1 1 1 1 1 1 1 1))

(define pat-v
  #(((8 . 1) (9 . 2) (58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (
    67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (78 . 14) (212 . 15) (56 
    . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (
    190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) 
    (195 . 30) (211 . 31) (213 . 32) (214 . 33) (80 . 34) (215 . 35) (216 . 36
    ) (217 . 37) (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43
    ) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50
    ) (87 . 51) (88 . 52) (89 . 53) (226 . 54) (228 . 55) (229 . 56) (230 . 57
    ) (231 . 58) (1 . 59) (2 . 60) (96 . 61) (235 . 62) (97 . 63) (179 . 64) (
    98 . 65) (107 . 66) (99 . 67) (236 . 68) (237 . 69)) ((-1 . -315)) ((-1 . 
    -314)) ((74 . 93) (8 . 1) (9 . 2) (212 . 94) (171 . 95)) ((74 . 90) (8 . 1
    ) (9 . 2) (212 . 91) (182 . 92)) ((74 . 87) (8 . 1) (9 . 2) (212 . 88) (
    188 . 89)) ((-1 . -97)) ((-1 . -93)) ((-1 . -92)) ((-1 . -91)) ((-1 . -90)
    ) ((-1 . -89)) ((-1 . -88)) ((-1 . -87)) ((81 . 38) (82 . 39) (83 . 40) (
    229 . 84) (210 . 85) (78 . 14) (211 . 86) (-1 . -41)) ((-1 . -38)) ((-1 . 
    -136)) ((-1 . -135)) ((-1 . -130)) ((-1 . -129)) ((-1 . -112)) ((-1 . -111
    )) ((-1 . -99)) ((-1 . -98)) ((-1 . -96)) ((-1 . -95)) ((-1 . -94)) ((-1 
    . -86)) ((-1 . -85)) ((-1 . -84)) ((-1 . -83)) ((8 . 1) (9 . 2) (212 . 15)
    (213 . 32) (214 . 33) (80 . 34) (215 . 35) (216 . 83)) ((-1 . -37)) ((-1 
    . -36)) ((8 . 1) (9 . 2) (78 . 14) (212 . 15) (211 . 31) (213 . 32) (214 
    . 33) (80 . 34) (215 . 35) (216 . 36) (217 . 37) (226 . 82)) ((-1 . -34)) 
    ((77 . 80) (80 . 81) (-1 . -33)) ((-1 . -32)) ((-1 . -31)) ((-1 . -30)) ((
    -1 . -29)) ((-1 . -28)) ((-1 . -27)) ((-1 . -26)) ((-1 . -25)) ((-1 . -24)
    ) ((-1 . -23)) ((-1 . -22)) ((-1 . -21)) ((-1 . -20)) ((-1 . -19)) ((-1 . 
    -18)) ((-1 . -17)) ((-1 . -16)) ((74 . -309)) ((58 . 3) (60 . 4) (61 . 5) 
    (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13
    ) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 
    22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 
    . 29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 
    . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 
    . 50) (87 . 51) (88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) (231 
    . 58) (235 . 79) (-1 . -10)) ((58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7)
    (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 
    . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (
    191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) 
    (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221 . 44) 
    (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (
    88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) (231 . 58) (235 . 78) 
    (-1 . -8)) ((58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9)
    (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (
    173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25)
    (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (81 . 38) (82 . 39)
    (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 
    46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89 . 53)
    (228 . 55) (229 . 56) (230 . 57) (231 . 58) (235 . 77) (-1 . -6)) ((58 . 
    3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 
    11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 
    20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 
    . 27) (193 . 28) (194 . 29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) (218 
    . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (
    84 . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89 . 53) (228 . 55) (229
    . 56) (230 . 57) (231 . 58) (235 . 76) (-1 . -4)) ((-1 . -322)) ((-1 . 
    -321)) ((74 . 74) (123 . 75)) ((227 . 71) (234 . 72) (8 . 1) (9 . 2) (78 
    . 14) (212 . 15) (211 . 31) (213 . 32) (214 . 33) (80 . 34) (215 . 35) (
    216 . 36) (217 . 37) (226 . 73)) ((-1 . -305)) ((-1 . -304)) ((-1 . -303))
    ((-1 . -302)) ((-1 . -300)) ((8 . 1) (9 . 2) (58 . 3) (60 . 4) (61 . 5) (
    62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13)
    (78 . 14) (212 . 15) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20)
    (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27
    ) (193 . 28) (194 . 29) (195 . 30) (211 . 31) (213 . 32) (214 . 33) (80 . 
    34) (215 . 35) (216 . 36) (217 . 37) (81 . 38) (82 . 39) (83 . 40) (218 . 
    41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (84 
    . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89 . 53) (226 . 54) (228 . 
    55) (229 . 56) (230 . 57) (231 . 58) (1 . 59) (2 . 60) (96 . 61) (235 . 62
    ) (97 . 63) (179 . 64) (98 . 65) (107 . 66) (99 . 70) (93 . -1)) ((93 . 0)
    ) ((-1 . -301)) ((92 . -12) (91 . -12)) ((233 . 221) (91 . 222) (92 . -3))
    ((58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10)
    (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (
    183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) 
    (192 . 27) (193 . 28) (194 . 29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) 
    (218 . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 
    47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89 . 53) (228 . 55)
    (229 . 56) (230 . 57) (231 . 58) (235 . 212) (107 . 218) (95 . 219) (90 
    . 220) (92 . -14) (91 . -14) (74 . -308)) ((153 . 118) (143 . 119) (141 . 
    120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (
    6 . 127) (7 . 128) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 
    133) (167 . 134) (168 . 135) (130 . 137) (53 . 138) (54 . 139) (78 . 175) 
    (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 
    147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 
    153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 
    159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (8 . 1) (
    9 . 2) (154 . 165) (128 . 166) (58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7
    ) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (212 . 176) (
    14 . 177) (15 . 178) (206 . 179) (56 . 16) (57 . 17) (172 . 18) (173 . 19)
    (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26
    ) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (17 . 180) (18 . 181) (19 . 
    182) (21 . 183) (110 . 184) (111 . 185) (112 . 186) (126 . 187) (81 . 38) 
    (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45)
    (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (
    89 . 53) (92 . 188) (10 . 189) (11 . 190) (12 . 191) (13 . 192) (16 . 193)
    (102 . 194) (103 . 195) (104 . 196) (105 . 197) (106 . 198) (74 . 74) (
    114 . 199) (169 . 200) (228 . 55) (229 . 56) (230 . 57) (231 . 58) (115 . 
    201) (116 . 202) (117 . 203) (118 . 204) (119 . 205) (120 . 206) (121 . 
    207) (122 . 208) (123 . 209) (124 . 210) (125 . 211) (235 . 212) (113 . 
    213) (107 . 214) (108 . 215) (109 . 216) (73 . 217)) ((-1 . -306)) ((-1 . 
    -5)) ((-1 . -7)) ((-1 . -9)) ((-1 . -11)) ((76 . 117) (153 . 118) (143 . 
    119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125)
    (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80
    . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 
    . 137) (53 . 138) (54 . 139) (78 . 140) (47 . 141) (48 . 142) (49 . 143) (
    50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 
    . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 
    156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 
    162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 167) (208 . 
    168) (82 . 169) (83 . 170) (81 . 171) (86 . 172) (207 . 173) (209 . 174)) 
    ((79 . 110) (8 . 1) (9 . 2) (212 . 111) (204 . 112) (58 . 3) (60 . 4) (61 
    . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71
    . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (
    189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) 
    (194 . 29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) 
    (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49)
    (86 . 50) (87 . 51) (88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) 
    (231 . 58) (235 . 113) (202 . 114) (203 . 115) (205 . 116)) ((79 . 109)) (
    (77 . 80) (80 . 81) (-1 . -39)) ((-1 . -44)) ((78 . 14) (211 . 107) (81 . 
    38) (82 . 39) (83 . 40) (229 . 108) (-1 . -40)) ((-1 . -43)) ((8 . 1) (9 
    . 2) (212 . 103) (185 . 104) (186 . 105) (187 . 106)) ((-1 . -105)) ((74 
    . 102) (-1 . -104)) ((58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8)
    (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172
    . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (
    63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (218 . 41) 
    (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (230 . 
    97) (180 . 98) (181 . 101)) ((-1 . -116)) ((74 . 100) (-1 . -115)) ((58 . 
    3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 
    11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 
    20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 
    . 27) (193 . 28) (194 . 29) (195 . 30) (218 . 41) (219 . 42) (220 . 43) (
    221 . 44) (222 . 45) (223 . 46) (224 . 47) (230 . 97) (180 . 98) (181 . 99
    )) ((-1 . -134)) ((74 . 96) (-1 . -133)) ((58 . 3) (60 . 4) (61 . 5) (62 
    . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (
    56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) 
    (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29)
    (195 . 30) (218 . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 
    46) (224 . 47) (230 . 97) (180 . 98) (181 . 337)) ((8 . 1) (9 . 2) (78 . 
    14) (212 . 15) (211 . 31) (213 . 32) (214 . 33) (80 . 34) (215 . 35) (216 
    . 36) (217 . 37) (59 . 331) (226 . 332) (175 . 333) (176 . 334) (177 . 335
    ) (178 . 336)) ((-1 . -117)) ((73 . 330) (58 . 3) (60 . 4) (61 . 5) (62 . 
    6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 
    . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (
    190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) 
    (195 . 30) (218 . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 
    46) (224 . 47) (230 . 97) (180 . 327) (2 . 60) (179 . 328)) ((58 . 3) (60 
    . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 
    . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 
    . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193
    . 28) (194 . 29) (195 . 30) (218 . 41) (219 . 42) (220 . 43) (221 . 44) (
    222 . 45) (223 . 46) (224 . 47) (230 . 97) (180 . 98) (181 . 329)) ((73 . 
    326) (58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 
    10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19
    ) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 
    26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (218 . 41) (219 . 42) (220
    . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (230 . 97) (180 . 327) 
    (2 . 60) (179 . 328)) ((8 . 1) (9 . 2) (212 . 103) (185 . 104) (186 . 105)
    (187 . 325)) ((90 . -110) (73 . -110) (91 . -110)) ((90 . 324) (73 . -108
    ) (91 . -108)) ((73 . -106) (91 . -106)) ((73 . 322) (91 . 323)) ((-1 . 
    -42)) ((-1 . -45)) ((-1 . -35)) ((-1 . -61)) ((79 . -69) (91 . -69)) ((79 
    . 320) (91 . 321)) ((8 . 1) (9 . 2) (212 . 15) (213 . 32) (214 . 33) (215 
    . 35) (216 . 36) (217 . 37) (226 . 314) (77 . 315) (80 . 316) (78 . 14) (
    170 . 317) (211 . 318) (201 . 319) (79 . -68) (91 . -68)) ((91 . -64) (79 
    . -64)) ((91 . 313) (79 . -62)) ((79 . 312)) ((-1 . -49)) ((-1 . -199)) ((
    45 . 308) (46 . 309) (78 . 310) (142 . 311) (-1 . -204)) ((51 . 305) (50 
    . 306) (140 . 307) (-1 . -208)) ((43 . 302) (44 . 303) (138 . 304) (-1 . 
    -212)) ((39 . 297) (40 . 298) (41 . 299) (42 . 300) (136 . 301) (-1 . -218
    )) ((37 . 294) (38 . 295) (134 . 296) (-1 . -226)) ((47 . 293) (-1 . -224)
    ) ((-1 . -319)) ((-1 . -318)) ((-1 . -317)) ((-1 . -316)) ((35 . 292) (-1 
    . -222)) ((36 . 291) (-1 . -230)) ((153 . 118) (143 . 119) (141 . 120) (
    139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 
    127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 
    132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138
    ) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 
    145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151
    ) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) 
    (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (
    159 . 164) (154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 288) (58
    . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 
    . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 
    . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192
    . 27) (193 . 28) (194 . 29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) (218
    . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (
    84 . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89 . 53) (228 . 55) (229
    . 56) (230 . 57) (231 . 58) (235 . 289) (155 . 290)) ((-1 . -166)) ((-1 
    . -165)) ((-1 . -155)) ((-1 . -154)) ((-1 . -153)) ((33 . 287) (-1 . -228)
    ) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (80 . 284) (157
    . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 
    139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52
    . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 
    . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 
    159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (154 . 
    286)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (80 . 284) 
    (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) 
    (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (
    165 . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (
    154 . 285)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 
    . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 
    139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52
    . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 
    . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 
    159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131
    ) (154 . 247) (153 . 250) (76 . 283)) ((4 . 125) (5 . 126) (6 . 127) (7 . 
    128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 
    . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (
    50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 
    . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 
    157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 
    163) (159 . 164) (80 . 131) (154 . 247) (153 . 282)) ((4 . 125) (5 . 126) 
    (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 134) (
    168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 
    142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (
    162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 155) (
    145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (
    151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 281)) ((4
    . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 
    133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) 
    (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 
    147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 
    153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 
    160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247
    ) (153 . 280)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (
    157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (
    52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165
    . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 
    . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 
    131) (154 . 247) (153 . 279)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 
    . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (
    53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144
    ) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (
    164 . 151) (165 . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (
    147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (
    159 . 164) (80 . 131) (154 . 247) (153 . 278)) ((4 . 125) (5 . 126) (6 . 
    127) (7 . 128) (8 . 1) (9 . 2) (80 . 276) (157 . 132) (158 . 133) (167 . 
    134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (
    48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 
    148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (154 . 277)) ((-1 . -163)) ((-1 
    . -162)) ((-1 . -161)) ((-1 . -160)) ((-1 . -159)) ((-1 . -158)) ((-1 . 
    -157)) ((32 . 274) (34 . 275) (-1 . -232)) ((-1 . -188)) ((-1 . -187)) ((
    -1 . -186)) ((-1 . -185)) ((-1 . -184)) ((-1 . -183)) ((-1 . -182)) ((-1 
    . -181)) ((-1 . -180)) ((77 . 268) (80 . 269) (54 . 270) (53 . 271) (72 . 
    272) (55 . 273) (-1 . -179)) ((22 . 256) (23 . 257) (24 . 258) (25 . 259) 
    (26 . 260) (27 . 261) (28 . 262) (29 . 263) (30 . 264) (31 . 265) (90 . 
    266) (127 . 267) (-1 . -177)) ((-1 . -234)) ((76 . -58)) ((76 . 255)) ((-1
    . -57)) ((-1 . -56)) ((-1 . -55)) ((-1 . -54)) ((-1 . -52)) ((153 . 118) 
    (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4
    . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 
    130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136
    ) (130 . 137) (53 . 138) (54 . 139) (47 . 141) (48 . 142) (49 . 143) (50 
    . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 
    150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 
    156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 
    162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 167) (208 . 
    251) (82 . 169) (83 . 170) (81 . 171) (86 . 172) (207 . 252) (76 . 253) (
    78 . 254)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 
    . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 
    139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52
    . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 
    . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 
    159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131
    ) (154 . 247) (153 . 250)) ((59 . -298) (-1 . -153)) ((59 . -292)) ((4 . 
    125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133)
    (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 
    . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) 
    (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (
    144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (
    150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153
    . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 
    . 124) (133 . 129) (132 . 130) (130 . 137) (129 . 154) (128 . 248) (196 . 
    249)) ((-1 . -247)) ((80 . 245) (101 . 246)) ((153 . 118) (143 . 119) (141
    . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126
    ) (6 . 127) (7 . 128) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 
    . 133) (167 . 134) (168 . 135) (130 . 137) (53 . 138) (54 . 139) (78 . 175
    ) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 
    . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 
    153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 
    159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (8 . 1) (
    9 . 2) (154 . 165) (128 . 166) (212 . 176) (14 . 177) (15 . 178) (206 . 
    179) (17 . 180) (18 . 181) (19 . 182) (21 . 183) (110 . 184) (111 . 185) (
    112 . 186) (126 . 187) (92 . 188) (10 . 189) (11 . 190) (12 . 191) (13 . 
    192) (16 . 193) (102 . 194) (103 . 195) (104 . 196) (105 . 197) (106 . 198
    ) (74 . 74) (114 . 199) (169 . 200) (115 . 201) (116 . 202) (117 . 203) (
    118 . 204) (119 . 205) (120 . 206) (121 . 207) (122 . 208) (123 . 209) (
    124 . 210) (125 . 211) (113 . 244)) ((80 . 243)) ((80 . 242)) ((59 . -266)
    ) ((59 . -265)) ((59 . -264)) ((91 . 241) (-1 . -249)) ((-1 . -299)) ((8 
    . 1) (9 . 2) (212 . 239) (112 . 240)) ((153 . 118) (143 . 119) (141 . 120)
    (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 
    127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 
    132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138
    ) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 
    145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151
    ) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) 
    (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (
    159 . 164) (154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 237) (92
    . 238)) ((92 . 236)) ((92 . 235)) ((80 . 234)) ((-1 . -279)) ((-1 . -278)
    ) ((-1 . -277)) ((-1 . -274)) ((-1 . -273)) ((59 . 233)) ((92 . 232)) ((-1
    . -261)) ((-1 . -260)) ((-1 . -259)) ((-1 . -258)) ((-1 . -257)) ((-1 . 
    -256)) ((-1 . -255)) ((-1 . -254)) ((-1 . -253)) ((-1 . -252)) ((-1 . -251
    )) ((8 . 1) (9 . 2) (78 . 14) (212 . 15) (211 . 31) (213 . 32) (214 . 33) 
    (80 . 34) (215 . 35) (216 . 36) (217 . 37) (226 . 223) (227 . 71) (234 . 
    72)) ((-1 . -272)) ((-1 . -271)) ((-1 . -269)) ((73 . 230) (153 . 118) (
    143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 
    . 125) (5 . 126) (6 . 127) (7 . 128) (133 . 129) (132 . 130) (80 . 131) (
    157 . 132) (158 . 133) (167 . 134) (168 . 135) (130 . 137) (53 . 138) (54 
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (
    52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165
    . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 
    . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 
    164) (8 . 1) (9 . 2) (154 . 165) (128 . 166) (58 . 3) (60 . 4) (61 . 5) (
    62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13)
    (212 . 176) (14 . 177) (15 . 178) (206 . 179) (56 . 16) (57 . 17) (172 . 
    18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 
    . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (17 . 180) (18
    . 181) (19 . 182) (21 . 183) (110 . 184) (111 . 185) (112 . 186) (126 . 
    187) (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221 
    . 44) (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 
    . 51) (88 . 52) (89 . 53) (92 . 188) (10 . 189) (11 . 190) (12 . 191) (13 
    . 192) (16 . 193) (102 . 194) (103 . 195) (104 . 196) (105 . 197) (106 . 
    198) (74 . 74) (114 . 199) (169 . 200) (228 . 55) (229 . 56) (230 . 57) (
    231 . 58) (115 . 201) (116 . 202) (117 . 203) (118 . 204) (119 . 205) (120
    . 206) (121 . 207) (122 . 208) (123 . 209) (124 . 210) (125 . 211) (235 
    . 212) (113 . 213) (107 . 214) (108 . 231)) ((-1 . -268)) ((-1 . -310)) ((
    58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (
    69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (
    183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) 
    (192 . 27) (193 . 28) (194 . 29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) 
    (218 . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 
    47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89 . 53) (228 . 55)
    (229 . 56) (230 . 57) (231 . 58) (235 . 212) (107 . 229) (74 . -307)) ((
    153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (
    131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 
    129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135
    ) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 
    . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148)
    (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (
    144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (
    150 . 161) (151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (74
    . 226) (206 . 227) (225 . 228)) ((92 . 225)) ((8 . 1) (9 . 2) (78 . 14) (
    212 . 15) (211 . 31) (213 . 32) (214 . 33) (80 . 34) (215 . 35) (216 . 36)
    (217 . 37) (226 . 223) (227 . 224)) ((90 . 220) (92 . -14) (91 . -14)) ((
    92 . -13) (91 . -13)) ((3 . 409) (94 . 410) (232 . 411) (-1 . -312)) ((153
    . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 
    . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129)
    (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (
    212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 
    142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (
    162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (
    144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (
    150 . 161) (151 . 162) (152 . 163) (159 . 164) (72 . 402) (77 . 403) (154 
    . 165) (128 . 166) (197 . 404) (198 . 405) (74 . 226) (206 . 227) (199 . 
    406) (225 . 407) (200 . 408)) ((73 . -71) (91 . -71) (92 . -71)) ((92 . 
    -15) (91 . -15)) ((-1 . -311)) ((-1 . -267)) ((-1 . -270)) ((-1 . -262)) (
    (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (
    131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (133 . 129) (132 . 130)
    (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (130 . 137) (
    53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144
    ) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (
    164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (
    146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (
    152 . 163) (159 . 164) (8 . 1) (9 . 2) (154 . 165) (128 . 166) (212 . 176)
    (14 . 177) (15 . 178) (206 . 179) (17 . 180) (18 . 181) (19 . 182) (21 . 
    183) (110 . 184) (111 . 185) (112 . 186) (126 . 187) (92 . 188) (10 . 189)
    (11 . 190) (12 . 191) (13 . 192) (16 . 193) (102 . 194) (103 . 195) (104 
    . 196) (105 . 197) (106 . 198) (74 . 74) (114 . 199) (169 . 200) (115 . 
    201) (116 . 202) (117 . 203) (118 . 204) (119 . 205) (120 . 206) (121 . 
    207) (122 . 208) (123 . 209) (124 . 210) (125 . 211) (113 . 401)) ((153 . 
    118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 
    124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (
    132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212
    . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142)
    (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 
    . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 
    179) (126 . 187) (169 . 400)) ((-1 . -293)) ((-1 . -294)) ((92 . 399)) ((
    -1 . -296)) ((92 . -298)) ((92 . 398)) ((153 . 118) (143 . 119) (141 . 120
    ) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 
    . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 
    . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 
    138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51
    . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 
    151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 
    157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 
    163) (159 . 164) (154 . 165) (128 . 166) (206 . 397)) ((153 . 118) (143 . 
    119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125)
    (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80
    . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 
    . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (
    50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 
    . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 
    156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 
    162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 179) (126 . 
    187) (169 . 396)) ((153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 
    122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 
    1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167
    . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 
    175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (
    160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (
    166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (
    154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 395)) ((19 . 394)) (
    (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (
    131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 
    129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135
    ) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 
    . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148)
    (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (58 . 3) (60 
    . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 
    . 12) (71 . 13) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158
    ) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) 
    (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22)
    (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29
    ) (195 . 30) (154 . 165) (128 . 166) (81 . 38) (82 . 39) (83 . 40) (218 . 
    41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (84 
    . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89 . 53) (206 . 179) (228 
    . 55) (229 . 56) (230 . 57) (231 . 58) (126 . 187) (235 . 212) (107 . 390)
    (92 . 391) (169 . 392) (100 . 393)) ((153 . 118) (143 . 119) (141 . 120) 
    (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 
    127) (7 . 128) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) 
    (167 . 134) (168 . 135) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 
    . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) 
    (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (
    129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (
    149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (8 . 1) (9 . 2)
    (154 . 165) (128 . 166) (212 . 176) (14 . 177) (15 . 178) (206 . 179) (17
    . 180) (18 . 181) (19 . 182) (21 . 183) (110 . 184) (111 . 185) (112 . 
    186) (126 . 187) (92 . 188) (10 . 189) (11 . 190) (12 . 191) (13 . 192) (
    16 . 193) (102 . 194) (103 . 195) (104 . 196) (105 . 197) (106 . 198) (74 
    . 74) (114 . 199) (169 . 200) (115 . 201) (116 . 202) (117 . 203) (118 . 
    204) (119 . 205) (120 . 206) (121 . 207) (122 . 208) (123 . 209) (124 . 
    210) (125 . 211) (113 . 389)) ((-1 . -177)) ((-1 . -250)) ((59 . -291)) ((
    -1 . -196)) ((76 . 388)) ((-1 . -53)) ((-1 . -47)) ((76 . 387) (4 . 125) (
    5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 
    . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141)
    (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 
    . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 250
    )) ((-1 . -48)) ((-1 . -246)) ((-1 . -245)) ((-1 . -244)) ((-1 . -243)) ((
    -1 . -242)) ((-1 . -241)) ((-1 . -240)) ((-1 . -239)) ((-1 . -238)) ((-1 
    . -237)) ((-1 . -236)) ((153 . 118) (143 . 119) (141 . 120) (139 . 121) (
    137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128)
    (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133
    ) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (
    78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146
    ) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) 
    (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (
    154 . 165) (128 . 166) (206 . 386)) ((153 . 118) (143 . 119) (141 . 120) (
    139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 
    127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 
    132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138
    ) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 
    145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151
    ) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) 
    (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (
    159 . 164) (154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 385)) ((
    79 . 382) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135
    . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2
    ) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (
    168 . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 
    141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (
    161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (
    129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (
    149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (154 . 165) (
    128 . 166) (206 . 383) (156 . 384)) ((-1 . -173)) ((-1 . -174)) ((8 . 1) (
    9 . 2) (212 . 381)) ((8 . 1) (9 . 2) (212 . 380)) ((153 . 118) (143 . 119)
    (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 
    . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 
    131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 
    137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50
    . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 
    150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 
    156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 
    162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 179) (126 . 
    187) (169 . 379)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2)
    (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (
    54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145
    ) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (
    165 . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80
    . 131) (154 . 247) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 
    . 122) (135 . 123) (131 . 124) (133 . 129) (132 . 130) (130 . 378)) ((153 
    . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 
    124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (
    132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212
    . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142)
    (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 
    . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 
    179) (126 . 187) (169 . 288) (58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) 
    (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 
    17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191
    . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (81
    . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221 . 44) (
    222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (
    88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) (231 . 58) (235 . 289)
    (155 . 377)) ((-1 . -190)) ((-1 . -191)) ((-1 . -192)) ((-1 . -193)) ((-1
    . -194)) ((-1 . -195)) ((-1 . -51)) ((58 . 3) (60 . 4) (61 . 5) (62 . 6) 
    (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 
    16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 
    . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195
    . 30) (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221
    . 44) (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 
    . 51) (88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) (231 . 58) (235
    . 289) (155 . 376) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 
    . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 
    . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (
    167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 
    . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (
    160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (
    166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (
    154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 288)) ((-1 . -197)) 
    ((-1 . -198)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (
    157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (
    52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165
    . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 
    . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 
    131) (154 . 247) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 
    122) (135 . 123) (131 . 124) (133 . 129) (132 . 375)) ((79 . 374)) ((77 . 
    315) (80 . 371) (78 . 14) (170 . 317) (211 . 372) (201 . 373) (79 . -138))
    ((79 . 370)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (
    157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (
    52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165
    . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 
    . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 
    131) (154 . 247) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 
    122) (135 . 123) (131 . 124) (133 . 369)) ((4 . 125) (5 . 126) (6 . 127) (
    7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (
    212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 
    143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) 
    (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 155) (145 . 156) (
    146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (
    152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 118) (143 . 119) (141
    . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 368)) ((4 . 125) (5 . 
    126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 
    134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (
    48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 
    148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 118
    ) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 367)) ((-1 . -221
    )) ((-1 . -220)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) 
    (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) 
    (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (
    165 . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80
    . 131) (154 . 247) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 
    . 366)) ((-1 . -217)) ((-1 . -216)) ((-1 . -215)) ((-1 . -214)) ((4 . 125)
    (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (
    167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 
    141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (
    161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (
    144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (
    150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153
    . 118) (143 . 119) (141 . 120) (139 . 365)) ((-1 . -211)) ((-1 . -210)) (
    (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 
    . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175
    ) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 
    . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 
    153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 
    160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247
    ) (153 . 118) (143 . 119) (141 . 364)) ((-1 . -207)) ((-1 . -206)) ((4 . 
    125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133)
    (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 
    . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) 
    (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (
    144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (
    150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153
    . 118) (143 . 363)) ((-1 . -203)) ((-1 . -202)) ((-1 . -201)) ((4 . 125) 
    (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167
    . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141
    ) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 
    . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 362
    )) ((-1 . -59)) ((58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67
    . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 
    18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 
    . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (81 . 38) (82 
    . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221 . 44) (222 . 45) (
    223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (88 . 52) (89
    . 53) (228 . 55) (229 . 56) (230 . 57) (231 . 58) (235 . 113) (202 . 360)
    (75 . 361)) ((79 . -66) (91 . -66)) ((76 . 357) (153 . 118) (143 . 119) (
    141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 
    126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131
    ) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) 
    (53 . 138) (54 . 139) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 
    145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151
    ) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) 
    (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (
    159 . 164) (154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 358) (78
    . 359)) ((77 . 315) (170 . 317) (201 . 354) (58 . 3) (60 . 4) (61 . 5) (
    62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13)
    (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22
    ) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 
    29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 
    43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 
    50) (87 . 51) (88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) (231 . 
    58) (235 . 113) (202 . 114) (203 . 115) (205 . 355) (79 . 356) (8 . 1) (9 
    . 2) (78 . 14) (212 . 15) (211 . 318) (213 . 32) (214 . 33) (80 . 316) (
    215 . 35) (216 . 36) (217 . 37) (226 . 82)) ((77 . 352) (80 . 353) (79 . 
    -141) (91 . -141)) ((77 . 315) (170 . 351) (8 . 1) (9 . 2) (212 . 15) (213
    . 32) (214 . 33) (80 . 316) (215 . 35) (216 . 83) (79 . -139) (91 . -139)
    ) ((79 . -67) (91 . -67)) ((-1 . -60)) ((8 . 1) (9 . 2) (212 . 350)) ((-1 
    . -101)) ((73 . 348) (8 . 1) (9 . 2) (212 . 103) (185 . 104) (186 . 349)) 
    ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 
    . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175
    ) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 
    . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 
    153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 
    160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247
    ) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) 
    (131 . 124) (133 . 129) (132 . 130) (130 . 137) (129 . 154) (128 . 248) (
    196 . 347)) ((91 . 345) (73 . 346)) ((-1 . -114)) ((-1 . -118)) ((-1 . 
    -119)) ((73 . 344) (58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (
    67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 
    . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (
    63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (218 . 41) 
    (219 . 42) (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (230 . 
    97) (180 . 327) (2 . 60) (179 . 328)) ((-1 . -132)) ((4 . 125) (5 . 126) (
    6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 134) (
    168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 
    142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (
    162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 155) (
    145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (
    151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 118) (143
    . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (133 
    . 129) (132 . 130) (130 . 137) (129 . 154) (128 . 248) (196 . 342) (174 . 
    343)) ((59 . 341) (92 . -125) (91 . -125)) ((92 . -124) (91 . -124)) ((92 
    . -123) (91 . -123)) ((92 . -121) (91 . -121)) ((92 . 339) (91 . 340)) ((
    73 . 338) (58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7) (66 . 8) (67 . 9) (
    68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 . 17) (172 . 18) (173
    . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (191 . 24) (63 . 25) (
    64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) (218 . 41) (219 . 42)
    (220 . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (230 . 97) (180 . 
    327) (2 . 60) (179 . 328)) ((-1 . -131)) ((3 . 409) (94 . 410) (232 . 446)
    (-1 . -312)) ((8 . 1) (9 . 2) (78 . 14) (212 . 15) (211 . 31) (213 . 32) 
    (214 . 33) (80 . 34) (215 . 35) (216 . 36) (217 . 37) (59 . 331) (226 . 
    332) (175 . 333) (176 . 334) (177 . 445)) ((4 . 125) (5 . 126) (6 . 127) (
    7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (
    212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 
    143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) 
    (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 155) (145 . 156) (
    146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (
    152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 118) (143 . 119) (141
    . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (133 . 129) (132 
    . 130) (130 . 137) (129 . 154) (128 . 248) (196 . 342) (174 . 444)) ((92 
    . -128) (91 . -128)) ((92 . -127) (91 . -127)) ((-1 . -113)) ((8 . 1) (9 
    . 2) (212 . 103) (185 . 104) (186 . 349) (73 . 443)) ((-1 . -100)) ((73 . 
    -109) (91 . -109)) ((-1 . -103)) ((73 . -107) (91 . -107)) ((79 . -70) (91
    . -70)) ((77 . 352) (80 . 353) (79 . -140) (91 . -140)) ((153 . 118) (143
    . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 
    125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130)
    (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (
    130 . 137) (53 . 138) (54 . 139) (78 . 440) (47 . 141) (48 . 142) (49 . 
    143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) 
    (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (
    145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (
    151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 179) (
    126 . 187) (169 . 441) (76 . 442)) ((79 . 438) (58 . 3) (60 . 4) (61 . 5) 
    (62 . 6) (65 . 7) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13
    ) (56 . 16) (57 . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 
    22) (190 . 23) (191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 
    . 29) (195 . 30) (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 
    . 43) (221 . 44) (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 
    . 50) (87 . 51) (88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) (231 
    . 58) (235 . 113) (202 . 114) (203 . 115) (205 . 439)) ((79 . 437)) ((79 
    . 436)) ((-1 . -152)) ((-1 . -144)) ((76 . 435)) ((76 . 434) (4 . 125) (5 
    . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 
    134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (
    48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 
    148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 250
    )) ((91 . -65) (79 . -65)) ((79 . -63)) ((-1 . -200)) ((45 . 308) (46 . 
    309) (78 . 310) (142 . 311) (-1 . -205)) ((51 . 305) (50 . 306) (140 . 307
    ) (-1 . -209)) ((43 . 302) (44 . 303) (138 . 304) (-1 . -213)) ((39 . 297)
    (40 . 298) (41 . 299) (42 . 300) (136 . 301) (-1 . -219)) ((37 . 294) (38
    . 295) (134 . 296) (-1 . -227)) ((47 . 293) (-1 . -225)) ((35 . 292) (-1 
    . -223)) ((74 . 432) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 
    2) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) 
    (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 
    145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151
    ) (165 . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) 
    (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (
    80 . 131) (154 . 247) (153 . 433)) ((77 . 315) (80 . 371) (78 . 14) (170 
    . 317) (211 . 372) (201 . 354) (58 . 3) (60 . 4) (61 . 5) (62 . 6) (65 . 7
    ) (66 . 8) (67 . 9) (68 . 10) (69 . 11) (70 . 12) (71 . 13) (56 . 16) (57 
    . 17) (172 . 18) (173 . 19) (183 . 20) (184 . 21) (189 . 22) (190 . 23) (
    191 . 24) (63 . 25) (64 . 26) (192 . 27) (193 . 28) (194 . 29) (195 . 30) 
    (81 . 38) (82 . 39) (83 . 40) (218 . 41) (219 . 42) (220 . 43) (221 . 44) 
    (222 . 45) (223 . 46) (224 . 47) (84 . 48) (85 . 49) (86 . 50) (87 . 51) (
    88 . 52) (89 . 53) (228 . 55) (229 . 56) (230 . 57) (231 . 58) (235 . 113)
    (202 . 114) (203 . 115) (205 . 355) (79 . 356)) ((77 . 315) (80 . 371) (
    170 . 351) (79 . -139)) ((79 . -137)) ((-1 . -156)) ((36 . 291) (-1 . -231
    )) ((79 . 431)) ((79 . 430)) ((33 . 287) (-1 . -229)) ((59 . 429)) ((-1 . 
    -168)) ((-1 . -167)) ((-1 . -170)) ((79 . -171) (91 . -171)) ((79 . 427) (
    91 . 428)) ((76 . 426)) ((-1 . -235)) ((-1 . -50)) ((-1 . -46)) ((-1 . 
    -282)) ((-1 . -289)) ((-1 . -288)) ((92 . 425)) ((92 . 423) (153 . 118) (
    143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 
    . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 
    130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136
    ) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 
    . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149
    ) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) 
    (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (
    151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (206 . 179) (
    126 . 187) (169 . 424)) ((80 . 422)) ((79 . 421)) ((79 . 420)) ((-1 . -248
    )) ((-1 . -297)) ((-1 . -295)) ((79 . 419)) ((-1 . -263)) ((8 . 1) (9 . 2)
    (212 . 418)) ((4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (
    157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (
    52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165
    . 152) (166 . 153) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 
    . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 
    131) (154 . 247) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 
    122) (135 . 123) (131 . 124) (133 . 129) (132 . 130) (130 . 137) (129 . 
    154) (128 . 248) (196 . 417)) ((90 . -79) (72 . -79) (77 . -79)) ((90 . 
    415) (72 . 402) (77 . 403) (197 . 416)) ((153 . 118) (143 . 119) (141 . 
    120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (
    6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157
    . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 
    138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51
    . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 
    151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 
    157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 
    163) (159 . 164) (154 . 165) (128 . 166) (74 . 226) (206 . 227) (225 . 414
    )) ((73 . -74) (91 . -74)) ((73 . 412) (91 . 413)) ((-1 . -320)) ((-1 . 
    -313)) ((-1 . -2)) ((73 . -73) (91 . -73) (92 . -73)) ((73 . 461) (72 . 
    402) (77 . 403) (197 . 404) (198 . 405) (199 . 462) (153 . 118) (143 . 119
    ) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5
    . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 
    131) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 
    137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50
    . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 
    150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 
    156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 
    162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (74 . 226) (206 . 227
    ) (225 . 463)) ((73 . -76) (91 . -76)) ((-1 . -78)) ((90 . -80) (72 . -80)
    (77 . -80)) ((76 . 460)) ((90 . -82) (77 . -82) (72 . -82)) ((153 . 118) 
    (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4
    . 125) (5 . 126) (6 . 127) (7 . 128) (133 . 129) (132 . 130) (80 . 131) (
    157 . 132) (158 . 133) (167 . 134) (168 . 135) (130 . 137) (53 . 138) (54 
    . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (
    52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165
    . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 
    . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 
    164) (8 . 1) (9 . 2) (154 . 165) (128 . 166) (212 . 176) (14 . 177) (15 . 
    178) (206 . 179) (17 . 180) (18 . 181) (19 . 182) (21 . 183) (110 . 184) (
    111 . 185) (112 . 186) (126 . 187) (92 . 188) (10 . 189) (11 . 190) (12 . 
    191) (13 . 192) (16 . 193) (102 . 194) (103 . 195) (104 . 196) (105 . 197)
    (106 . 198) (74 . 74) (114 . 199) (169 . 200) (115 . 201) (116 . 202) (
    117 . 203) (118 . 204) (119 . 205) (120 . 206) (121 . 207) (122 . 208) (
    123 . 209) (124 . 210) (125 . 211) (113 . 459)) ((153 . 118) (143 . 119) (
    141 . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 
    126) (6 . 127) (7 . 128) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (
    158 . 133) (167 . 134) (168 . 135) (130 . 137) (53 . 138) (54 . 139) (78 
    . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (
    160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (
    166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (8 
    . 1) (9 . 2) (154 . 165) (128 . 166) (212 . 176) (14 . 177) (15 . 178) (
    206 . 179) (17 . 180) (18 . 181) (19 . 182) (21 . 183) (110 . 184) (111 . 
    185) (112 . 186) (126 . 187) (92 . 188) (10 . 189) (11 . 190) (12 . 191) (
    13 . 192) (16 . 193) (102 . 194) (103 . 195) (104 . 196) (105 . 197) (106 
    . 198) (74 . 74) (114 . 199) (169 . 200) (115 . 201) (116 . 202) (117 . 
    203) (118 . 204) (119 . 205) (120 . 206) (121 . 207) (122 . 208) (123 . 
    209) (124 . 210) (125 . 211) (113 . 458)) ((153 . 118) (143 . 119) (141 . 
    120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (
    6 . 127) (7 . 128) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 
    133) (167 . 134) (168 . 135) (130 . 137) (53 . 138) (54 . 139) (78 . 175) 
    (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 
    147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 
    153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 
    159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (8 . 1) (
    9 . 2) (154 . 165) (128 . 166) (212 . 176) (14 . 177) (15 . 178) (206 . 
    179) (17 . 180) (18 . 181) (19 . 182) (21 . 183) (110 . 184) (111 . 185) (
    112 . 186) (126 . 187) (92 . 188) (10 . 189) (11 . 190) (12 . 191) (13 . 
    192) (16 . 193) (102 . 194) (103 . 195) (104 . 196) (105 . 197) (106 . 198
    ) (74 . 74) (114 . 199) (169 . 200) (115 . 201) (116 . 202) (117 . 203) (
    118 . 204) (119 . 205) (120 . 206) (121 . 207) (122 . 208) (123 . 209) (
    124 . 210) (125 . 211) (113 . 457)) ((153 . 118) (143 . 119) (141 . 120) (
    139 . 121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 
    127) (7 . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 
    132) (158 . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138
    ) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 
    145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151
    ) (165 . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) 
    (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (
    159 . 164) (154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 456)) ((
    153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123) (
    131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133 . 
    129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 135
    ) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 
    . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148)
    (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (
    144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (
    150 . 161) (151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 166) (
    206 . 179) (126 . 187) (169 . 454) (79 . 455)) ((92 . 453)) ((-1 . -287)) 
    ((-1 . -164)) ((-1 . -169)) ((153 . 118) (143 . 119) (141 . 120) (139 . 
    121) (137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 
    . 128) (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158
    . 133) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 
    139) (78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52
    . 146) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 
    . 152) (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 
    158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 
    164) (154 . 165) (128 . 166) (206 . 452)) ((4 . 125) (5 . 126) (6 . 127) (
    7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (167 . 134) (168 . 135) (
    212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (49 . 
    143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 149) 
    (163 . 150) (164 . 151) (165 . 152) (166 . 153) (144 . 155) (145 . 156) (
    146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 161) (151 . 162) (
    152 . 163) (159 . 164) (80 . 131) (154 . 247) (153 . 118) (143 . 119) (141
    . 120) (139 . 121) (137 . 122) (135 . 123) (131 . 124) (133 . 129) (132 
    . 130) (130 . 137) (129 . 154) (128 . 451)) ((74 . 432) (-1 . -189)) ((74 
    . 432)) ((153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 
    . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2)
    (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (
    168 . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 
    141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (
    161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (
    129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (
    149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (72 . 402) (77 
    . 403) (154 . 165) (128 . 166) (197 . 404) (198 . 405) (74 . 226) (206 . 
    227) (199 . 406) (225 . 407) (200 . 450)) ((-1 . -178)) ((-1 . -148)) ((-1
    . -146)) ((-1 . -151)) ((-1 . -142)) ((-1 . -150)) ((79 . 449)) ((4 . 125
    ) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (157 . 132) (158 . 133) (
    167 . 134) (168 . 135) (212 . 136) (53 . 138) (54 . 139) (78 . 175) (47 . 
    141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (
    161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (
    144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (
    150 . 161) (151 . 162) (152 . 163) (159 . 164) (80 . 131) (154 . 247) (153
    . 250) (76 . 448)) ((76 . 447)) ((-1 . -143)) ((-1 . -102)) ((92 . -126) 
    (91 . -126)) ((92 . -122) (91 . -122)) ((-1 . -120)) ((-1 . -145)) ((-1 . 
    -147)) ((-1 . -149)) ((73 . 470) (91 . 471)) ((-1 . -233)) ((79 . -172) (
    91 . -172)) ((79 . 468) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (
    137 . 122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128)
    (8 . 1) (9 . 2) (133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133
    ) (167 . 134) (168 . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (
    78 . 175) (47 . 141) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146
    ) (160 . 147) (161 . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) 
    (166 . 153) (129 . 154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (
    148 . 159) (149 . 160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (
    154 . 165) (128 . 166) (206 . 179) (126 . 187) (169 . 469)) ((79 . 467)) (
    (-1 . -286)) ((79 . 466)) ((-1 . -280)) ((20 . 465) (-1 . -275)) ((-1 . 
    -290)) ((90 . -81) (77 . -81) (72 . -81)) ((73 . -72) (91 . -72) (92 . -72
    )) ((153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 123
    ) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (133
    . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 
    135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (
    48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 
    148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 
    154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 
    160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 
    166) (74 . 226) (206 . 227) (225 . 464)) ((73 . -75) (91 . -75)) ((73 . 
    -77) (91 . -77)) ((153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 
    122) (135 . 123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (133 
    . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168 . 
    135) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141) (48 . 142) (
    49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 . 148) (162 . 
    149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 154) (144 . 
    155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 160) (150 . 
    161) (151 . 162) (152 . 163) (159 . 164) (8 . 1) (9 . 2) (154 . 165) (128 
    . 166) (212 . 176) (14 . 177) (15 . 178) (206 . 179) (17 . 180) (18 . 181)
    (19 . 182) (21 . 183) (110 . 184) (111 . 185) (112 . 186) (126 . 187) (92
    . 188) (10 . 189) (11 . 190) (12 . 191) (13 . 192) (16 . 193) (102 . 194)
    (103 . 195) (104 . 196) (105 . 197) (106 . 198) (74 . 74) (114 . 199) (
    169 . 200) (115 . 201) (116 . 202) (117 . 203) (118 . 204) (119 . 205) (
    120 . 206) (121 . 207) (122 . 208) (123 . 209) (124 . 210) (125 . 211) (
    113 . 475)) ((92 . 474)) ((-1 . -285)) ((-1 . -284)) ((79 . 473)) ((-1 . 
    -175)) ((73 . 472) (72 . 402) (77 . 403) (197 . 404) (198 . 405) (199 . 
    462) (153 . 118) (143 . 119) (141 . 120) (139 . 121) (137 . 122) (135 . 
    123) (131 . 124) (4 . 125) (5 . 126) (6 . 127) (7 . 128) (8 . 1) (9 . 2) (
    133 . 129) (132 . 130) (80 . 131) (157 . 132) (158 . 133) (167 . 134) (168
    . 135) (212 . 136) (130 . 137) (53 . 138) (54 . 139) (78 . 175) (47 . 141
    ) (48 . 142) (49 . 143) (50 . 144) (51 . 145) (52 . 146) (160 . 147) (161 
    . 148) (162 . 149) (163 . 150) (164 . 151) (165 . 152) (166 . 153) (129 . 
    154) (144 . 155) (145 . 156) (146 . 157) (147 . 158) (148 . 159) (149 . 
    160) (150 . 161) (151 . 162) (152 . 163) (159 . 164) (154 . 165) (128 . 
    166) (74 . 226) (206 . 227) (225 . 463)) ((-1 . -176)) ((-1 . -283)) ((-1 
    . -281)) ((-1 . -276))))

(define rto-v
  #(#f 237 107 233 235 235 235 235 235 235 235 235 234 234 227 227 231 231 
    231 231 231 228 230 230 230 230 230 230 230 229 229 229 226 226 216 216 
    216 216 215 217 211 211 211 211 210 210 213 213 213 213 213 213 209 209 
    207 207 207 207 208 214 214 214 205 205 203 203 202 202 202 204 204 225 
    225 225 200 200 200 200 199 198 198 197 197 222 222 222 222 195 195 195 
    195 194 193 192 223 223 223 191 224 224 190 190 190 190 189 188 187 187 
    186 186 185 221 221 184 184 183 182 181 181 181 180 178 178 177 177 176 
    175 175 174 219 219 173 173 172 171 218 220 155 155 201 201 201 170 170 
    170 170 170 170 170 170 170 170 170 166 166 166 167 159 159 159 159 159 
    159 159 165 164 164 158 157 163 163 156 156 162 161 160 160 153 153 154 
    154 154 154 154 154 154 154 154 154 152 152 151 150 149 148 147 146 145 
    144 143 143 142 142 142 141 141 140 140 139 139 138 138 137 137 136 136 
    136 136 135 135 134 134 132 132 133 133 131 131 129 129 130 130 128 128 
    206 206 127 127 127 127 127 127 127 127 127 127 127 126 126 169 196 113 
    113 113 113 113 113 113 113 113 113 113 125 124 114 114 114 123 123 109 
    109 108 108 122 122 106 105 121 121 121 104 103 102 101 101 101 101 100 
    100 100 120 111 110 119 118 117 117 116 112 115 236 236 99 99 99 99 98 96 
    96 96 95 95 232 232 212 212 168 168 168 168 94 179 97))

(define mtab
  '((cpp-stmt . 1) ($lone-comm . 2) ($code-comm . 3) ($string . 4) ($ch . 5)
    ($fl . 6) ($fx . 7) (cpp-ident . 8) ($ident . 9) ("goto" . 10) ("return" 
    . 11) ("continue" . 12) ("break" . 13) ("default" . 14) ("case" . 15) (
    "switch" . 16) ("for" . 17) ("do" . 18) ("while" . 19) ("else" . 20) ("if"
    . 21) ("|=" . 22) ("^=" . 23) ("&=" . 24) (">>=" . 25) ("<<=" . 26) ("%="
    . 27) ("/=" . 28) ("*=" . 29) ("-=" . 30) ("+=" . 31) ("?" . 32) ("&&" . 
    33) ("||" . 34) ("^" . 35) ("|" . 36) ("!=" . 37) ("==" . 38) (">=" . 39) 
    (">" . 40) ("<=" . 41) ("<" . 42) (">>" . 43) ("<<" . 44) ("%" . 45) ("/" 
    . 46) ("&" . 47) ("~" . 48) ("!" . 49) ("+" . 50) ("-" . 51) ("sizeof" . 
    52) ("--" . 53) ("++" . 54) ("->" . 55) (typename . 56) ("void" . 57) (
    "union" . 58) (":" . 59) ("struct" . 60) ("enum" . 61) ("_Complex" . 62) (
    "double" . 63) ("float" . 64) ("_Bool" . 65) ("char" . 66) ("unsigned" . 
    67) ("long" . 68) ("signed" . 69) ("int" . 70) ("short" . 71) ("." . 72) (
    "}" . 73) ("{" . 74) ("..." . 75) ("]" . 76) ("[" . 77) ("*" . 78) (")" . 
    79) ("(" . 80) ("restrict" . 81) ("volatile" . 82) ("const" . 83) (
    "inline" . 84) ("typedef" . 85) ("static" . 86) ("register" . 87) (
    "extern" . 88) ("auto" . 89) ("=" . 90) ("," . 91) (";" . 92) ($end . 93)))

(define act-v
  (vector
   ;; $start => translation-unit-proxy
   (lambda ($1 . $rest) $1)
   ;; translation-unit-proxy => translation-unit
   (lambda ($1 . $rest) (tl->list $1))
   ;; declaration => declaration-specifiers initialized-declarator-list $P1...
   (lambda ($5 $4 $3 $2 $1 . $rest)
     (if (pair? $5) (append $3 (list $5)) $3))
   ;; $P1 => 
   (lambda ($2 $1 . $rest)
     (let ((decl `(decl ,(tl->list $1) ,(tl->list $2))))
       (for-each add-typename (find-new-typenames decl))
       decl))
   ;; declaration-specifiers => storage-class-specifier
   (lambda ($1 . $rest)
     (make-tl 'decl-spec-list $1))
   ;; declaration-specifiers => storage-class-specifier declaration-specifiers
   (lambda ($2 $1 . $rest) (tl-insert $2 $1))
   ;; declaration-specifiers => type-specifier
   (lambda ($1 . $rest)
     (make-tl 'decl-spec-list $1))
   ;; declaration-specifiers => type-specifier declaration-specifiers
   (lambda ($2 $1 . $rest) (tl-insert $2 $1))
   ;; declaration-specifiers => type-qualifier
   (lambda ($1 . $rest)
     (make-tl 'decl-spec-list `(type-qual ,$1)))
   ;; declaration-specifiers => type-qualifier declaration-specifiers
   (lambda ($2 $1 . $rest)
     (tl-insert $2 `(type-qual ,$1)))
   ;; declaration-specifiers => function-specifier
   (lambda ($1 . $rest)
     (make-tl 'decl-spec-list `(fctn-spec ,$1)))
   ;; declaration-specifiers => function-specifier declaration-specifiers
   (lambda ($2 $1 . $rest)
     (tl-insert $2 `(fctn-spec ,$1)))
   ;; initialized-declarator-list => initialized-declarator
   (lambda ($1 . $rest)
     (make-tl 'init-declr-list $1))
   ;; initialized-declarator-list => initialized-declarator-list "," initia...
   (lambda ($3 $2 $1 . $rest) (tl-append $1 $3))
   ;; initialized-declarator => declarator
   (lambda ($1 . $rest) `(init-declr ,$1))
   ;; initialized-declarator => declarator "=" initializer
   (lambda ($3 $2 $1 . $rest) `(init-declr ,$1 ,$3))
   ;; storage-class-specifier => "auto"
   (lambda ($1 . $rest) '(stor-spec (auto)))
   ;; storage-class-specifier => "extern"
   (lambda ($1 . $rest) '(stor-spec (extern)))
   ;; storage-class-specifier => "register"
   (lambda ($1 . $rest) '(stor-spec (register)))
   ;; storage-class-specifier => "static"
   (lambda ($1 . $rest) '(stor-spec (static)))
   ;; storage-class-specifier => "typedef"
   (lambda ($1 . $rest) '(stor-spec (typedef)))
   ;; function-specifier => "inline"
   (lambda ($1 . $rest) $1)
   ;; type-specifier => enumeration-type-specifier
   (lambda ($1 . $rest) $1)
   ;; type-specifier => floating-point-type-specifier
   (lambda ($1 . $rest) $1)
   ;; type-specifier => integer-type-specifier
   (lambda ($1 . $rest) $1)
   ;; type-specifier => structure-type-specifier
   (lambda ($1 . $rest) $1)
   ;; type-specifier => typedef-name
   (lambda ($1 . $rest) $1)
   ;; type-specifier => union-type-specifier
   (lambda ($1 . $rest) $1)
   ;; type-specifier => void-type-specifier
   (lambda ($1 . $rest) $1)
   ;; type-qualifier => "const"
   (lambda ($1 . $rest) '(type-qual (const)))
   ;; type-qualifier => "volatile"
   (lambda ($1 . $rest) '(type-qual (volatile)))
   ;; type-qualifier => "restrict"
   (lambda ($1 . $rest) '(type-qual (restrict)))
   ;; declarator => pointer-declarator
   (lambda ($1 . $rest) $1)
   ;; declarator => direct-declarator
   (lambda ($1 . $rest) $1)
   ;; direct-declarator => simple-declarator
   (lambda ($1 . $rest) $1)
   ;; direct-declarator => "(" declarator ")"
   (lambda ($3 $2 $1 . $rest) `(scope ,$2))
   ;; direct-declarator => function-declarator
   (lambda ($1 . $rest) $1)
   ;; direct-declarator => array-declarator
   (lambda ($1 . $rest) $1)
   ;; simple-declarator => identifier
   (lambda ($1 . $rest) $1)
   ;; pointer-declarator => pointer direct-declarator
   (lambda ($2 $1 . $rest) `(pointer-declr ,$1 ,$2))
   ;; pointer => "*" type-qualifier-list
   (lambda ($2 $1 . $rest) `(pointer ,$2))
   ;; pointer => "*"
   (lambda ($1 . $rest) '(pointer))
   ;; pointer => "*" type-qualifier-list pointer
   (lambda ($3 $2 $1 . $rest)
     `(pointer ,(tl->list $2) ,$3))
   ;; pointer => "*" pointer
   (lambda ($2 $1 . $rest) `(pointer ,$1))
   ;; type-qualifier-list => type-qualifier
   (lambda ($1 . $rest)
     (make-tl 'type-qual-list $1))
   ;; type-qualifier-list => type-qualifier-list type-qualifier
   (lambda ($2 $1 . $rest) (tl-append $1 $2))
   ;; array-declarator => direct-declarator "[" array-qualifier-list array-...
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(array-of ,$1 ,$2 ,$3))
   ;; array-declarator => direct-declarator "[" array-qualifier-list "]"
   (lambda ($4 $3 $2 $1 . $rest)
     `(array-of ,$1 ,$3))
   ;; array-declarator => direct-declarator "[" array-size-expression "]"
   (lambda ($4 $3 $2 $1 . $rest)
     `(array-of ,$1 ,$3))
   ;; array-declarator => direct-declarator "[" "]"
   (lambda ($3 $2 $1 . $rest) `(array-of ,$1))
   ;; array-declarator => direct-declarator "[" array-qualifier-list "*" "]"
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(array-of ,$1 ,$3 "*???"))
   ;; array-declarator => direct-declarator "[" "*" "]"
   (lambda ($4 $3 $2 $1 . $rest)
     `(array-of ,$1 "*???"))
   ;; array-qualifier-list => array-qualifier
   (lambda ($1 . $rest)
     (make-tl 'array-qual-list (list $1)))
   ;; array-qualifier-list => array-qualifier-list array-qualifier
   (lambda ($2 $1 . $rest) (tl-append $1 (list $2)))
   ;; array-qualifier => "static"
   (lambda ($1 . $rest) $1)
   ;; array-qualifier => "restrict"
   (lambda ($1 . $rest) $1)
   ;; array-qualifier => "const"
   (lambda ($1 . $rest) $1)
   ;; array-qualifier => "volatile"
   (lambda ($1 . $rest) $1)
   ;; array-size-expression => assignment-expression
   (lambda ($1 . $rest) $1)
   ;; function-declarator => direct-declarator "(" parameter-type-list ")"
   (lambda ($4 $3 $2 $1 . $rest)
     `(fctn-declr ,$1 ,(tl->list $3)))
   ;; function-declarator => direct-declarator "(" identifier-list ")"
   (lambda ($4 $3 $2 $1 . $rest)
     `(fctn-declr ,$1 ,(tl->list $3)))
   ;; function-declarator => direct-declarator "(" ")"
   (lambda ($3 $2 $1 . $rest) `(fctn-declr ,$1))
   ;; parameter-type-list => parameter-list
   (lambda ($1 . $rest) $1)
   ;; parameter-type-list => parameter-list "," "..."
   (lambda ($3 $2 $1 . $rest) $1)
   ;; parameter-list => parameter-declaration
   (lambda ($1 . $rest) (make-tl 'param-list $1))
   ;; parameter-list => parameter-list "," parameter-declaration
   (lambda ($3 $2 $1 . $rest) (tl-append $1 $3))
   ;; parameter-declaration => declaration-specifiers declarator
   (lambda ($2 $1 . $rest)
     `(param-decln ,(tl->list $1) ,$2))
   ;; parameter-declaration => declaration-specifiers abstract-declarator
   (lambda ($2 $1 . $rest)
     `(param-decln ,(tl->list $1) ,$2))
   ;; parameter-declaration => declaration-specifiers
   (lambda ($1 . $rest)
     `(param-decln ,(tl->list $1)))
   ;; identifier-list => identifier
   (lambda ($1 . $rest) (make-tl 'ident-list $1))
   ;; identifier-list => identifier-list "," identifier
   (lambda ($3 $2 $1 . $rest) (tl-append $1 $3))
   ;; initializer => assignment-expression
   (lambda ($1 . $rest) `(initzer ,$1))
   ;; initializer => "{" initializer-list "," "}"
   (lambda ($4 $3 $2 $1 . $rest)
     `(initzer ,(tl->list $2)))
   ;; initializer => "{" initializer-list "}"
   (lambda ($3 $2 $1 . $rest)
     `(initzer ,(tl->list $2)))
   ;; initializer-list => initializer
   (lambda ($1 . $rest) (make-tl 'initzer-list $1))
   ;; initializer-list => initializer-list "," initializer
   (lambda ($3 $2 $1 . $rest) (tl-append $1 $3))
   ;; initializer-list => designation initializer
   (lambda ($2 $1 . $rest)
     (make-tl 'initzer-list $1 $2))
   ;; initializer-list => initializer-list "," designation initializer
   (lambda ($4 $3 $2 $1 . $rest)
     (tl-append $1 $3 $4))
   ;; designation => designator-list "="
   (lambda ($2 $1 . $rest) $1)
   ;; designator-list => designator
   (lambda ($1 . $rest) (make-tl 'desgr-list $1))
   ;; designator-list => designator-list designator
   (lambda ($2 $1 . $rest) (tl->append $1 $2))
   ;; designator => "[" constant-expression "]"
   (lambda ($3 $2 $1 . $rest) (list 'array-dsgr $2))
   ;; designator => "." identifier
   (lambda ($2 $1 . $rest) (list 'sel-dsgr $2))
   ;; integer-type-specifier => signed-type-specifier
   (lambda ($1 . $rest) $1)
   ;; integer-type-specifier => unsigned-type-specifier
   (lambda ($1 . $rest) $1)
   ;; integer-type-specifier => character-type-specifier
   (lambda ($1 . $rest) $1)
   ;; integer-type-specifier => bool-type-specifier
   (lambda ($1 . $rest) $1)
   ;; signed-type-specifier => "short"
   (lambda ($1 . $rest) '(short))
   ;; signed-type-specifier => "int"
   (lambda ($1 . $rest) '(int))
   ;; signed-type-specifier => "signed"
   (lambda ($1 . $rest) '(int))
   ;; signed-type-specifier => "long"
   (lambda ($1 . $rest) '(long))
   ;; unsigned-type-specifier => "unsigned"
   (lambda ($1 . $rest) '(unsigned))
   ;; character-type-specifier => "char"
   (lambda ($1 . $rest) '(char))
   ;; bool-type-specifier => "_Bool"
   (lambda ($1 . $rest) '(bool))
   ;; floating-point-type-specifier => "float"
   (lambda ($1 . $rest) '(float))
   ;; floating-point-type-specifier => "double"
   (lambda ($1 . $rest) '(double))
   ;; floating-point-type-specifier => complex-type-specifier
   (lambda ($1 . $rest) $1)
   ;; complex-type-specifier => "_Complex"
   (lambda ($1 . $rest) '(complex))
   ;; enumeration-type-specifier => enumeration-type-definition
   (lambda ($1 . $rest) $1)
   ;; enumeration-type-specifier => enumeration-type-reference
   (lambda ($1 . $rest) $1)
   ;; enumeration-type-definition => "enum" enumeration-tag "{" enumeration...
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(enum-def ,$1 ,(tl->list $4)))
   ;; enumeration-type-definition => "enum" "{" enumeration-definition-list...
   (lambda ($4 $3 $2 $1 . $rest)
     `(enum-def ,(tl->list $4)))
   ;; enumeration-type-definition => "enum" enumeration-tag "{" enumeration...
   (lambda ($6 $5 $4 $3 $2 $1 . $rest)
     `(enum-def ,$1 ,(tl->list $4)))
   ;; enumeration-type-definition => "enum" "{" enumeration-definition-list...
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(enum-def ,(tl->list $4)))
   ;; enumeration-type-reference => "enum" enumeration-tag
   (lambda ($2 $1 . $rest) `(enum-ref ,$2))
   ;; enumeration-tag => identifier
   (lambda ($1 . $rest) $1)
   ;; enumeration-definition-list => enumeration-constant-definition
   (lambda ($1 . $rest) (make-tl 'enum-def-list $1))
   ;; enumeration-definition-list => enumeration-definition-list "," enumer...
   (lambda ($3 $2 $1 . $rest) (tl-append $1 $3))
   ;; enumeration-constant-definition => enumeration-constant
   (lambda ($1 . $rest) `(enum-defn ,$1))
   ;; enumeration-constant-definition => enumeration-constant "=" constant-...
   (lambda ($3 $2 $1 . $rest) `(enum-defn ,$1 ,$3))
   ;; enumeration-constant => identifier
   (lambda ($1 . $rest) $1)
   ;; structure-type-specifier => structure-type-definition
   (lambda ($1 . $rest) $1)
   ;; structure-type-specifier => structure-type-reference
   (lambda ($1 . $rest) $1)
   ;; structure-type-definition => "struct" structure-tag "{" field-list "}"
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(struct-def ,$1 ,(tl->list $4)))
   ;; structure-type-definition => "struct" "{" field-list "}"
   (lambda ($4 $3 $2 $1 . $rest)
     `(struct-def ,(tl->list $3)))
   ;; structure-type-reference => "struct" structure-tag
   (lambda ($2 $1 . $rest) `(struct-ref ,$1))
   ;; structure-tag => identifier
   (lambda ($1 . $rest) $1)
   ;; field-list => component-declaration
   (lambda ($1 . $rest) (make-tl 'field-list $1))
   ;; field-list => field-list component-declaration
   (lambda ($2 $1 . $rest) (tl-append $1 $2))
   ;; field-list => field-list lone-comment
   (lambda ($2 $1 . $rest) (tl-append $1 $2))
   ;; component-declaration => type-specifier component-declarator-list ";"...
   (lambda ($4 $3 $2 $1 . $rest)
     (if (pair? $4)
       `(comp-decln ,$1 ,(tl->list $2) ,$4)
       `(comp-decln ,$1 ,(tl->list $2))))
   ;; component-declarator-list => component-declarator
   (lambda ($1 . $rest)
     (make-tl 'comp-declr-list $1))
   ;; component-declarator-list => component-declarator-list "," component-...
   (lambda ($3 $2 $1 . $rest) (tl-append $1 $3))
   ;; component-declarator => simple-component
   (lambda ($1 . $rest) $1)
   ;; component-declarator => bit-field
   (lambda ($1 . $rest) $1)
   ;; simple-component => declarator
   (lambda ($1 . $rest) $1)
   ;; bit-field => declarator ":" width
   (lambda ($3 $2 $1 . $rest) `(bit-field ,$1 ,$3))
   ;; bit-field => ":" width
   (lambda ($2 $1 . $rest) `(bit-field ,$2))
   ;; width => constant-expression
   (lambda ($1 . $rest) $1)
   ;; union-type-specifier => union-type-definition
   (lambda ($1 . $rest) $1)
   ;; union-type-specifier => union-type-reference
   (lambda ($1 . $rest) $1)
   ;; union-type-definition => "union" union-tag "{" field-list "}"
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(union-def ,$1 ,(tl->list $4)))
   ;; union-type-definition => "union" "{" field-list "}"
   (lambda ($4 $3 $2 $1 . $rest)
     `(union-def ,(tl->list $3)))
   ;; union-type-reference => "union" union-tag
   (lambda ($2 $1 . $rest) `(struct-ref ,$1))
   ;; union-tag => identifier
   (lambda ($1 . $rest) $1)
   ;; void-type-specifier => "void"
   (lambda ($1 . $rest) $1)
   ;; typedef-name => 'typename
   (lambda ($1 . $rest) `(ident ,$1))
   ;; type-name => declaration-specifiers abstract-declarator
   (lambda ($2 $1 . $rest)
     `(type-name ,(tl->list $1) ,$2))
   ;; type-name => declaration-specifiers
   (lambda ($1 . $rest) `(type-name ,(tl->list $1)))
   ;; abstract-declarator => pointer
   (lambda ($1 . $rest) $1)
   ;; abstract-declarator => pointer direct-abstract-declarator
   (lambda ($2 $1 . $rest) `(abs-declr ,$1 ,$2))
   ;; abstract-declarator => direct-abstract-declarator
   (lambda ($1 . $rest) $1)
   ;; direct-abstract-declarator => "(" abstract-declarator ")"
   (lambda ($3 $2 $1 . $rest) `(declr-scope ,$2))
   ;; direct-abstract-declarator => direct-abstract-declarator "[" "]"
   (lambda ($3 $2 $1 . $rest) `(declr-array ,$1))
   ;; direct-abstract-declarator => "[" "]"
   (lambda ($2 $1 . $rest) $1)
   ;; direct-abstract-declarator => direct-abstract-declarator "[" expressi...
   (lambda ($4 $3 $2 $1 . $rest)
     `(declr-arry ,$1 ,$3))
   ;; direct-abstract-declarator => "[" expression "]"
   (lambda ($3 $2 $1 . $rest)
     `(declr-anon-arry ,$2))
   ;; direct-abstract-declarator => direct-abstract-declarator "[" "*" "]"
   (lambda ($4 $3 $2 $1 . $rest) `(declr-STAR ,$1))
   ;; direct-abstract-declarator => "[" "*" "]"
   (lambda ($3 $2 $1 . $rest) '(declr-STAR))
   ;; direct-abstract-declarator => direct-abstract-declarator "(" paramete...
   (lambda ($4 $3 $2 $1 . $rest)
     `(declr-fctn ,$1 ,(tl->list $3)))
   ;; direct-abstract-declarator => direct-abstract-declarator "(" ")"
   (lambda ($3 $2 $1 . $rest) `(declr-fctn ,$1))
   ;; direct-abstract-declarator => "(" parameter-type-list ")"
   (lambda ($3 $2 $1 . $rest)
     `(declr-anon-fctn ,(tl->list $2)))
   ;; direct-abstract-declarator => "(" ")"
   (lambda ($2 $1 . $rest) '(declr-anon-fctn))
   ;; primary-expression => identifier
   (lambda ($1 . $rest) `(p-expr ,$1))
   ;; primary-expression => constant
   (lambda ($1 . $rest) `(p-expr ,$1))
   ;; primary-expression => parenthesized-expression
   (lambda ($1 . $rest) $1)
   ;; parenthesized-expression => "(" expression ")"
   (lambda ($3 $2 $1 . $rest) `(p-expr ,$2))
   ;; postfix-expression => primary-expression
   (lambda ($1 . $rest) $1)
   ;; postfix-expression => subscript-expression
   (lambda ($1 . $rest) $1)
   ;; postfix-expression => component-selection-expression
   (lambda ($1 . $rest) $1)
   ;; postfix-expression => function-call
   (lambda ($1 . $rest) $1)
   ;; postfix-expression => postincrement-expression
   (lambda ($1 . $rest) $1)
   ;; postfix-expression => postdecrement-expression
   (lambda ($1 . $rest) $1)
   ;; postfix-expression => compound-literal
   (lambda ($1 . $rest) $1)
   ;; subscript-expression => postfix-expression "[" expression "]"
   (lambda ($4 $3 $2 $1 . $rest) $1)
   ;; component-selection-expression => direct-component-selection
   (lambda ($1 . $rest) $1)
   ;; component-selection-expression => indirect-component-selection
   (lambda ($1 . $rest) $1)
   ;; direct-component-selection => postfix-expression "." identifier
   (lambda ($3 $2 $1 . $rest) `(d-sel ,$3 ,$1))
   ;; indirect-component-selection => postfix-expression "->" identifier
   (lambda ($3 $2 $1 . $rest) `(i-sel ,$3 ,$1))
   ;; function-call => postfix-expression "(" expression-list ")"
   (lambda ($4 $3 $2 $1 . $rest)
     `(fctn-call ,$1 ,$2))
   ;; function-call => postfix-expression "(" ")"
   (lambda ($3 $2 $1 . $rest) `(fctn-call ,$1))
   ;; expression-list => assignment-expression
   (lambda ($1 . $rest) (make-tl 'expr-list $1))
   ;; expression-list => expression-list "," assignment-expression
   (lambda ($3 $2 $1 . $rest) (tl-append $1 $3))
   ;; postincrement-expression => postfix-expression "++"
   (lambda ($2 $1 . $rest) `(post-inc ,$1))
   ;; postdecrement-expression => postfix-expression "--"
   (lambda ($2 $1 . $rest) `(post-dec ,$1))
   ;; compound-literal => "(" type-name ")" "{" initializer-list "}"
   (lambda ($6 $5 $4 $3 $2 $1 . $rest)
     `(comp-literal ,$2 ,(tl->list $5)))
   ;; compound-literal => "(" type-name ")" "{" initializer-list "," "}"
   (lambda ($7 $6 $5 $4 $3 $2 $1 . $rest)
     `(comp-literal ,$2 ,(tl->list $5)))
   ;; cast-expression => unary-expression
   (lambda ($1 . $rest) $1)
   ;; cast-expression => "(" type-name ")" cast-expression
   (lambda ($4 $3 $2 $1 . $rest) `(cast ,$2 ,$4))
   ;; unary-expression => postfix-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => sizeof-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => unary-minus-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => unary-plus-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => logical-negation-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => bitwise-negation-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => address-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => indirection-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => preincrement-expression
   (lambda ($1 . $rest) $1)
   ;; unary-expression => predecrement-expression
   (lambda ($1 . $rest) $1)
   ;; sizeof-expression => "sizeof" "(" type-name ")"
   (lambda ($4 $3 $2 $1 . $rest) `(sizeof-type ,$3))
   ;; sizeof-expression => "sizeof" unary-expression
   (lambda ($2 $1 . $rest) `(sizeof-expr ,$2))
   ;; unary-minus-expression => "-" cast-expression
   (lambda ($2 $1 . $rest) `(neg ,$2))
   ;; unary-plus-expression => "+" cast-expression
   (lambda ($2 $1 . $rest) `(pos ,$2))
   ;; logical-negation-expression => "!" cast-expression
   (lambda ($2 $1 . $rest) $1)
   ;; bitwise-negation-expression => "~" cast-expression
   (lambda ($2 $1 . $rest) $1)
   ;; address-expression => "&" cast-expression
   (lambda ($2 $1 . $rest) $1)
   ;; indirection-expression => "*" cast-expression
   (lambda ($2 $1 . $rest) $1)
   ;; preincrement-expression => "++" unary-expression
   (lambda ($2 $1 . $rest) `(pre-inc ,$2))
   ;; predecrement-expression => "--" unary-expression
   (lambda ($2 $1 . $rest) `(pre-dec ,$2))
   ;; multiplicative-expression => cast-expression
   (lambda ($1 . $rest) $1)
   ;; multiplicative-expression => multiplicative-expression mult-op cast-e...
   (lambda ($3 $2 $1 . $rest) (list $2 $1 $3))
   ;; mult-op => "*"
   (lambda ($1 . $rest) 'mul)
   ;; mult-op => "/"
   (lambda ($1 . $rest) 'div)
   ;; mult-op => "%"
   (lambda ($1 . $rest) 'mod)
   ;; additive-expression => multiplicative-expression
   (lambda ($1 . $rest) $1)
   ;; additive-expression => additive-expression add-op multiplicative-expr...
   (lambda ($3 $2 $1 . $rest) (list $2 $1 $3))
   ;; add-op => "+"
   (lambda ($1 . $rest) 'add)
   ;; add-op => "-"
   (lambda ($1 . $rest) 'sub)
   ;; shift-expression => additive-expression
   (lambda ($1 . $rest) $1)
   ;; shift-expression => shift-expression shift-op additive-expression
   (lambda ($3 $2 $1 . $rest) (list $2 $1 $3))
   ;; shift-op => "<<"
   (lambda ($1 . $rest) 'lshift)
   ;; shift-op => ">>"
   (lambda ($1 . $rest) 'rshift)
   ;; relational-expression => shift-expression
   (lambda ($1 . $rest) $1)
   ;; relational-expression => relational-expression relational-op shift-ex...
   (lambda ($3 $2 $1 . $rest) (list $2 $1 $3))
   ;; relational-op => "<"
   (lambda ($1 . $rest) 'lt)
   ;; relational-op => "<="
   (lambda ($1 . $rest) 'le)
   ;; relational-op => ">"
   (lambda ($1 . $rest) 'gt)
   ;; relational-op => ">="
   (lambda ($1 . $rest) 'ge)
   ;; equality-expression => relational-expression
   (lambda ($1 . $rest) $1)
   ;; equality-expression => equality-expression equality-op relational-exp...
   (lambda ($3 $2 $1 . $rest) (list $2 $1 $3))
   ;; equality-op => "=="
   (lambda ($1 . $rest) 'eq)
   ;; equality-op => "!="
   (lambda ($1 . $rest) 'ne)
   ;; bitwise-or-expression => bitwise-xor-expression
   (lambda ($1 . $rest) $1)
   ;; bitwise-or-expression => bitwise-or-expression "|" bitwise-xor-expres...
   (lambda ($3 $2 $1 . $rest) `(bitwise-or ,$1 ,$3))
   ;; bitwise-xor-expression => bitwise-and-expression
   (lambda ($1 . $rest) $1)
   ;; bitwise-xor-expression => bitwise-xor-expression "^" bitwise-and-expr...
   (lambda ($3 $2 $1 . $rest)
     `(bitwise-xor ,$1 ,$3))
   ;; bitwise-and-expression => equality-expression
   (lambda ($1 . $rest) $1)
   ;; bitwise-and-expression => bitwise-and-expression "&" equality-expression
   (lambda ($3 $2 $1 . $rest)
     `(bitwise-and ,$1 ,$3))
   ;; logical-or-expression => logical-and-expression
   (lambda ($1 . $rest) $1)
   ;; logical-or-expression => logical-or-expression "||" logical-and-expre...
   (lambda ($3 $2 $1 . $rest) `(or ,$1 ,$3))
   ;; logical-and-expression => bitwise-or-expression
   (lambda ($1 . $rest) $1)
   ;; logical-and-expression => logical-and-expression "&&" bitwise-or-expr...
   (lambda ($3 $2 $1 . $rest) `(and ,$1 ,$3))
   ;; conditional-expression => logical-or-expression
   (lambda ($1 . $rest) $1)
   ;; conditional-expression => logical-or-expression "?" expression ":" co...
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(cond-expr $1 $2 $3))
   ;; assignment-expression => conditional-expression
   (lambda ($1 . $rest) $1)
   ;; assignment-expression => unary-expression assignment-op assignment-ex...
   (lambda ($3 $2 $1 . $rest) (list $2 $1 $3))
   ;; assignment-op => "="
   (lambda ($1 . $rest) 'assign)
   ;; assignment-op => "+="
   (lambda ($1 . $rest) 'add-assign)
   ;; assignment-op => "-="
   (lambda ($1 . $rest) 'sub-assign)
   ;; assignment-op => "*="
   (lambda ($1 . $rest) 'mul-assign)
   ;; assignment-op => "/="
   (lambda ($1 . $rest) 'div-assign)
   ;; assignment-op => "%="
   (lambda ($1 . $rest) 'mod-assign)
   ;; assignment-op => "<<="
   (lambda ($1 . $rest) 'lshift-assign)
   ;; assignment-op => ">>="
   (lambda ($1 . $rest) 'rshift-assign)
   ;; assignment-op => "&="
   (lambda ($1 . $rest) 'and-assign)
   ;; assignment-op => "^="
   (lambda ($1 . $rest) 'xor-assign)
   ;; assignment-op => "|="
   (lambda ($1 . $rest) 'or-assign)
   ;; comma-expression => assignment-expression
   (lambda ($1 . $rest) $1)
   ;; comma-expression => comma-expression "," assignment-expression
   (lambda ($3 $2 $1 . $rest) $1)
   ;; expression => comma-expression
   (lambda ($1 . $rest) $1)
   ;; constant-expression => conditional-expression
   (lambda ($1 . $rest) $1)
   ;; statement => expression-statement
   (lambda ($1 . $rest) $1)
   ;; statement => labeled-statement
   (lambda ($1 . $rest) $1)
   ;; statement => compound-statement
   (lambda ($1 . $rest) $1)
   ;; statement => conditional-statement
   (lambda ($1 . $rest) $1)
   ;; statement => iterative-statement
   (lambda ($1 . $rest) $1)
   ;; statement => switch-statement
   (lambda ($1 . $rest) $1)
   ;; statement => break-statement
   (lambda ($1 . $rest) $1)
   ;; statement => continue-statement
   (lambda ($1 . $rest) $1)
   ;; statement => return-statement
   (lambda ($1 . $rest) $1)
   ;; statement => goto-statement
   (lambda ($1 . $rest) $1)
   ;; statement => null-statement
   (lambda ($1 . $rest) $1)
   ;; expression-statement => expression ";"
   (lambda ($2 $1 . $rest) $1)
   ;; labeled-statement => label ":" statement
   (lambda ($3 $2 $1 . $rest) $1)
   ;; label => named-label
   (lambda ($1 . $rest) $1)
   ;; label => case-label
   (lambda ($1 . $rest) $1)
   ;; label => default-label
   (lambda ($1 . $rest) $1)
   ;; compound-statement => "{" declaration-or-statement-list "}"
   (lambda ($3 $2 $1 . $rest) $1)
   ;; compound-statement => "{" "}"
   (lambda ($2 $1 . $rest) $1)
   ;; declaration-or-statement-list => declaration-or-statement
   (lambda ($1 . $rest) $1)
   ;; declaration-or-statement-list => declaration-or-statement-list declar...
   (lambda ($2 $1 . $rest) $1)
   ;; declaration-or-statement => declaration
   (lambda ($1 . $rest) $1)
   ;; declaration-or-statement => statement
   (lambda ($1 . $rest) $1)
   ;; conditional-statement => if-statement
   (lambda ($1 . $rest) $1)
   ;; conditional-statement => if-else-statement
   (lambda ($1 . $rest) $1)
   ;; if-statement => "if" "(" expression ")" statement
   (lambda ($5 $4 $3 $2 $1 . $rest) `(if ,$3 ,$5))
   ;; if-else-statement => "if" "(" expression ")" statement "else" statement
   (lambda ($7 $6 $5 $4 $3 $2 $1 . $rest)
     `(if ,$3 ,$5 ,7))
   ;; iterative-statement => while-statement
   (lambda ($1 . $rest) $1)
   ;; iterative-statement => do-statement
   (lambda ($1 . $rest) $1)
   ;; iterative-statement => for-statement
   (lambda ($1 . $rest) $1)
   ;; while-statement => "while" "(" expression ")" statement
   (lambda ($5 $4 $3 $2 $1 . $rest)
     `(while ,$3 ,$5))
   ;; do-statement => "do" statement "while" "(" expression ")" ";"
   (lambda ($7 $6 $5 $4 $3 $2 $1 . $rest)
     `(do-while ,$2 ,$5))
   ;; for-statement => "for" for-expressions statement
   (lambda ($3 $2 $1 . $rest) `(for ,@$2 $3))
   ;; for-expressions => "(" initial-clause expression ";" expression ")"
   (lambda ($6 $5 $4 $3 $2 $1 . $rest)
     (list $2 $3 $5))
   ;; for-expressions => "(" initial-clause expression ";" ")"
   (lambda ($5 $4 $3 $2 $1 . $rest)
     (list $2 $3 (expr)))
   ;; for-expressions => "(" initial-clause ";" expression ")"
   (lambda ($5 $4 $3 $2 $1 . $rest)
     (list $2 (expr) $4))
   ;; for-expressions => "(" initial-clause ";" ")"
   (lambda ($4 $3 $2 $1 . $rest)
     (list $2 (expr) (expr)))
   ;; initial-clause => expression ";"
   (lambda ($2 $1 . $rest) $1)
   ;; initial-clause => ";"
   (lambda ($1 . $rest) '(expr))
   ;; initial-clause => declaration
   (lambda ($1 . $rest) $1)
   ;; switch-statement => "switch" "(" expression ")" statement
   (lambda ($5 $4 $3 $2 $1 . $rest) $1)
   ;; case-label => "case" constant-expression
   (lambda ($2 $1 . $rest) $1)
   ;; default-label => "default"
   (lambda ($1 . $rest) $1)
   ;; break-statement => "break" ";"
   (lambda ($2 $1 . $rest) '(break))
   ;; continue-statement => "continue" ";"
   (lambda ($2 $1 . $rest) '(continue))
   ;; return-statement => "return" expression ";"
   (lambda ($3 $2 $1 . $rest) `(return $2))
   ;; return-statement => "return" ";"
   (lambda ($2 $1 . $rest) `(return (expr)))
   ;; goto-statement => "goto" named-label ";"
   (lambda ($3 $2 $1 . $rest) `(goto $2))
   ;; named-label => identifier
   (lambda ($1 . $rest) $1)
   ;; null-statement => ";"
   (lambda ($1 . $rest) (null-stmt))
   ;; translation-unit => top-level-declaration
   (lambda ($1 . $rest) (make-tl 'trans-unit $1))
   ;; translation-unit => translation-unit top-level-declaration
   (lambda ($2 $1 . $rest) (tl-append $1 $2))
   ;; top-level-declaration => declaration
   (lambda ($1 . $rest) $1)
   ;; top-level-declaration => function-definition
   (lambda ($1 . $rest) $1)
   ;; top-level-declaration => lone-comment
   (lambda ($1 . $rest) $1)
   ;; top-level-declaration => cpp-statement
   (lambda ($1 . $rest) $1)
   ;; function-definition => function-def-specifier compound-statement
   (lambda ($2 $1 . $rest) $1)
   ;; function-def-specifier => declaration-specifiers declarator declarati...
   (lambda ($3 $2 $1 . $rest)
     `(fctn-defn1a ,(tl->list $1) ,$2 ,(tl->list $3)))
   ;; function-def-specifier => declaration-specifiers declarator
   (lambda ($2 $1 . $rest)
     `(fctn-defn1b ,(tl->list $1) ,$2))
   ;; function-def-specifier => declarator
   (lambda ($1 . $rest) `(fctn-defn1c ,$1))
   ;; declaration-list => declaration
   (lambda ($1 . $rest) (make-tl $1))
   ;; declaration-list => declaration-list declaration
   (lambda ($2 $1 . $rest) (tl-append $1 $2))
   ;; opt-code-comment => 
   (lambda $rest (list))
   ;; opt-code-comment => code-comment
   (lambda ($1 . $rest) $1)
   ;; identifier => '$ident
   (lambda ($1 . $rest) `(ident ,$1))
   ;; identifier => 'cpp-ident
   (lambda ($1 . $rest) `(ident ,$1))
   ;; constant => '$fx
   (lambda ($1 . $rest) `(fixed ,$1))
   ;; constant => '$fl
   (lambda ($1 . $rest) `(float ,$1))
   ;; constant => '$ch
   (lambda ($1 . $rest) `(char ,$1))
   ;; constant => '$string
   (lambda ($1 . $rest) `(string ,$1))
   ;; code-comment => '$code-comm
   (lambda ($1 . $rest) `(comment ,$1))
   ;; lone-comment => '$lone-comm
   (lambda ($1 . $rest) `(comment ,$1))
   ;; cpp-statement => 'cpp-stmt
   (lambda ($1 . $rest) `(cpp-stmt ,$1))
   ))

;;; end tables
