#!/bin/sh
# -*- scheme -*-
exec guile $0 $*
!#

(use-modules (nyacc lang tsh parser))
(use-modules (nyacc lang tsh compile-tree-il))
;;(use-modules (nyacc lang tsh pprint))
(use-modules (srfi srfi-37))
(use-modules (ice-9 pretty-print))
(define pp pretty-print)

(define (fail fmt . args)
  (apply simple-format (current-error-port)
	 (string-append "nxtcl: " fmt "\n")
	 args)
  (exit 1))

(define options
  (list))

(define (parse-args args)
  (args-fold args options
	     (lambda (opt name arg seed)
	       (fail "unrecognized option: ~S" name)
	       (exit 1))
	     (lambda (file seed)
	       (if (assq-ref 'file seed)
		   (fail "only one inupt file can be specified"))
	       (unless (string-suffix? ".tsh" file)
		 (fail "expecting .tsh file"))
	       (acons 'file file seed))
	     '()))

(define (compile-nx-file . args)
  (let* ((options (parse-args args))
	 (file (assoc-ref options 'file))
	 (tree (with-input-from-file file
		 (lambda () (parse-tsh))))
	 (xtil (compile-tree-il tree (current-module) '()))
	 )
    ;;(pretty-print tree)
    (if #f #f)))

(apply compile-nx-file (cdr (program-arguments)))

;; --- last line ---
