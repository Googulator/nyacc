Copyright (C) 2017-2019 Matthew R. Wette

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.  This file is offered as-is,
without any warranty.

2019-05-    V0.93.0 release
	* this CPP feature now works: #define /* hello */ abc 123
	* fixed issue in c99/eval-cpp-incl where #f was ending up in
	  output if no include file found

2019-04-02  V0.92.0 release
	
	* The distribution has been converted to using autoconf, but
	  without automake, which brings in a lot of rubble, IMO.

	* Fixed bug in the ffi-helper that was genering bad code for
	  unions.

2019-01-18  V0.91.0 release

	* module/nyacc/parse.scm (dmsg/n): added ntab information; so
	debug is now more informative:
	OLD:
	  state 99, token 33 => shift, goto 300
	NEW:
	  state 99, token additive-expression => shift, goto 300

	* ffi-help: converting composite literal to constant is no longer
	a fatal error

	* module/nyacc/lang/c99/cxeval.scm (eval-c99-cx): added case for
	comp-lit; made failure throw c99-error instead of calling error

	* module/nyacc/lang/c99/ffi-help.scm: updated error handling when
	cannot convert enum or #defined argument to a constant

2018-11-29  V0.90.0 release

	* module/nyacc/lang/c99/mach.scm (c99-spec): K&R function
	definitions have been removed, since conflict with __attribute__,
	as in: int foo(x) __attribute__ ((__bar__)) int x; { ... };
	Is attribute associated with declarator or declaration-specifiers?

	* update Major overhaul of __attribute__ handling in C99 parser

	* update merged nx-matlab updates from nxdev branch; added fix
	for nyacc/lex.scm to parse #xffff00000


	* update reworked the nyacc parser.scm file (see nyacc/ChangeLog);
	instead of separate parsers for interactive and non-interactive
	there is now one make-lalr-parser with optional #:interactive
	keyword argument; also added #:skip-if-unexp for skipping
	unexpected tokens (e.g., for comments -- this is useful);

	* update moved code from c99/xparser.scm into c99/parser.scm and
	deleted c99/xparser

	* update cleaned up C99 parser set up; the mapping between parse
	tables and the lexical analyzer setup was brittle; cleaned up
	circular dependency between the parser and lexical analyzer using
	letrec; see c99/parser.scm and c99/body.scm

	new release 0.85.0
	* changed the integrated hashed vs unhashed parser was split into
	/sym parsers for unhashed and /num for hashed.
	* updated interactive parsers, getting ready to and integrate file
	and interactive parsers, and overhaul C99 parser setup

