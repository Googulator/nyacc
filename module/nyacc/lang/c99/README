nyacc/lang/c99/

Copyright (C) 2015,2016 Matthew R. Wette

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.  This file is offered as-is,
without any warranty.

manifest:

cpp.scm		C preprocessor using tables
		includes: cppact.scm,cpptab.scm
cppmach.scm	CPP expression grammer, machine and act/tab file generation

mach.scm	C grammer, machine and act/tab file generation
		include: pbody.scm
		depends: cpp.scm
parser.scm	C file parser, using tables 
		includes: body.scm, c99act.scm, c99tab.scm
		depends: cpp.scm
xparser.scm	C expression parser
		includes: body.scm, c99xact.scm, c99xtab.scm
		depends: cpp.scm

pprint.scm	C pretty printer, from SXML output of above parsers

util1.scm	utilities merge, remove trees from included files
munge.scm	utilities to process information in trees

mach.d/
  cppact.scm	cpp expression parser actions, generated from cppmach.scm
  cpptab.scm	cpp expression parser tables, generated from cppmach.scm

  c99act.scm	parser actions, generated from mach.scm
  c99tab.scm	C99 parser tables, generated from mach.scm

  c99xact.scm	expression parser actions, generated from mach.scm
  c99xtab.scm	C99 expression parser tables, generated from mach.scm


==== cpp ================================

parse-cpp-line line => tree


(define (bounding-struct-descriptor union-descriptor)
  (let ((size (bytestructure-descriptor-size union-descriptor))
	(align (bytestructure-descriptor-alignment union-descriptor))
	(diff (- size align)))
    (if (positive? diff)
	(case align
	  ((8) (bs:struct `(x ,double) `(y ,(bs-vector diff uint8))))
	  ((4) (bs:struct `(x ,uint32) `(y ,(bs-vector diff uint8))))
	  ((2) (bs:struct `(x ,uint16) `(y ,(bs-vector diff uint8))))
	  ((1) (bs:struct `(x ,uint8) `(y ,(bs-vector diff uint8))))
	  (else (error "unknown alignment")))
	(case align
	  ((8) (bs:struct `(x ,double)))
	  ((4) (bs:struct `(x ,uint32)))
	  ((2) (bs:struct `(x ,uint16)))
	  ((1) (bs:struct `(x ,uint8)))
	  (else (error "unknown alignment"))))))
